@page "/AI_Assistant"
@using HWDPortalMaui.Services
@inject AIAssistantService _aiAssistantService
@implements IDisposable

<div class="ai-assistant-container">
    <div id="chat-history" class="chat-history">
        @* [修改] 所有資料來源都改為 _aiAssistantService *@
        @foreach (var message in _aiAssistantService.ChatMessages)
        {
            <div class="chat-message @(message.Author == "User" ? "user-message" : "ai-message")">
                <div class="message-author">@(message.Author)</div>
                <div class="message-content">@((MarkupString)message.Content)</div>
            </div>
        }
        @if (_aiAssistantService.IsInitializing)
        {
            <div class="chat-message ai-message">
                <div class="message-author">HWD AI</div>
                <div class="message-content">
                    <span>初始化中...</span>
                    <span class="dot">.</span>
                    <span class="dot">.</span>
                    <span class="dot">.</span>
                </div>
            </div>
        }

        @if (_aiAssistantService.IsLoading)
        {
            <div class="chat-message ai-message">
                <div class="message-author">HWD AI</div>
                <div class="message-content">
                    <span>思考中...</span>
                    <span class="dot">.</span>
                    <span class="dot">.</span>
                    <span class="dot">.</span>
                </div>
            </div>
        }
    </div>

    <div class="chat-input-area">
        <div class="button-group-top">
            @* [修改] 所有事件和狀態都綁定到 _aiAssistantService *@
            <button class="btn-new-chat" @onclick="_aiAssistantService.StartNewChatAsync" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">
                <span class="oi oi-plus" aria-hidden="true"></span> 開新對話
            </button>
            <button class="btn-settings" @onclick="_aiAssistantService.OpenSettingsAsync" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">
                <span class="oi oi-cog" aria-hidden="true"></span> 助理設定
            </button>
        </div>
        <div class="input-row">
            <textarea class="chat-textarea"
                      @bind="_aiAssistantService.UserMessageInput"
                      @bind:event="oninput"
                      placeholder="在這裡輸入您的訊息... (Shift+Enter 換行)"
                      @onkeydown="_aiAssistantService.HandleKeyDown"
                      disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">
            </textarea>
            <button class="btn-send"
                    @onclick="_aiAssistantService.SendMessageAsync"
                    disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">
                送出
            </button>
        </div>
    </div>
</div>

@* [修改] 所有通知訊息的狀態都來自 _aiAssistantService *@
@if (!string.IsNullOrEmpty(_aiAssistantService.NotificationMessage))
{
    <div class="notification-bar @_aiAssistantService.NotificationCssClass">
        @_aiAssistantService.NotificationMessage
    </div>
}

@* [修改] 確認對話框的狀態綁定到 _aiAssistantService *@
@if (_aiAssistantService.ShowNewChatConfirm)
{
    <div class="settings-modal-backdrop">
        <div class="settings-modal-content" style="max-width: 400px;">
            <div class="settings-modal-header">
                <h3>確認操作</h3>
            </div>
            <div class="settings-modal-body">
                <p>確定要開啟新對話嗎？目前的對話將會被清空。</p>
            </div>
            <div class="settings-modal-footer">
                <button class="btn btn-secondary" @onclick="_aiAssistantService.CancelNewChat">取消</button>
                <button class="btn btn-danger" @onclick="_aiAssistantService.ConfirmNewChatAsync">確定</button>
            </div>
        </div>
    </div>
}

@* [修改] 設定視窗的狀態和資料都綁定到 _aiAssistantService *@
@if (_aiAssistantService.ShowSettingsModal)
{
    <div class="settings-modal-backdrop">
        <div class="settings-modal-content">
            <div class="settings-modal-header">
                <h3>助理設定</h3>
                <button class="btn-close" @onclick="_aiAssistantService.CloseSettingsModalAsync">×</button>
            </div>
            <div class="settings-modal-body">
                <div class="settings-left-panel">
                    <div class="settings-group">
                        <label>助理名稱:</label>
                        <span>@_aiAssistantService.CurrentSettings.AssistantName</span>
                    </div>
                    <div class="settings-group">
                        <label>部署模型:</label>
                        <span>@_aiAssistantService.CurrentSettings.Model</span>
                    </div>
                    <div class="settings-group">
                        <label>向量存放區:</label>
                        <span>@_aiAssistantService.CurrentSettings.VectorStoreName</span>
                    </div>

                    <div class="settings-group settings-group-vertical">
                        <label for="instructions">Instructions (指示):</label>
                        <textarea id="instructions" class="settings-textarea" @bind="_aiAssistantService.CurrentSettings.Instructions"></textarea>
                    </div>

                    <div class="settings-group settings-group-vertical">
                        <label for="temperature">Temperature (溫度): @_aiAssistantService.CurrentSettings.Temperature.ToString("F2")</label>
                        <span>較高的值（如 0.8）將使輸出更加隨機，而較低的值（如 0.2）將使其更加集中和確定性。</span>
                        <input type="range" id="temperature" min="0.01" max="1.0" step="0.01" @bind="_aiAssistantService.CurrentSettings.Temperature" />
                    </div>

                    <div class="settings-group">
                        <label for="common-vector">啟用HWD公用資料庫</label>
                        <label class="switch">
                            <input type="checkbox" id="common-vector" @bind="_aiAssistantService.CurrentSettings.UseCommonVectorStore">
                            <span class="slider round"></span>
                        </label>
                    </div>

                </div>
                <div class="settings-right-panel">
                    <div class="settings-group">
                        <h5 class="panel-title">向量區檔案</h5>
                        <InputFile OnChange="_aiAssistantService.HandleFileSelected" class="form-control" title="上傳檔案" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)" />
                    </div>
                    <div class="file-list-container">
                        <table class="file-list-table">
                            <thead>
                                <tr>
                                    <th>檔案名稱</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (_aiAssistantService.FilesInVectorStore.Any())
                                {
                                    @foreach (var file in _aiAssistantService.FilesInVectorStore)
                                    {
                                        <tr>
                                            <td title="@file.Id">@file.Name</td>
                                            <td>
                                                <button class="btn-delete-file" @onclick="() => _aiAssistantService.DeleteFileAsync(file.Id)" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">刪除</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="2">此向量存放區中沒有檔案。</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="settings-modal-footer">
                <button class="btn btn-secondary" @onclick="_aiAssistantService.CloseSettingsModalAsync" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">取消</button>
                <button class="btn btn-primary" @onclick="_aiAssistantService.SaveSettingsAsync" disabled="@(_aiAssistantService.IsLoading || _aiAssistantService.IsInitializing)">儲存設定</button>
            </div>
        </div>
    </div>
}


@code {
    // [移除] 移除所有 C# 邏輯，只留下與元件生命週期和 UI 更新相關的程式碼

    [CascadingParameter]
    public MainLayout? Layout { get; set; }

    protected override void OnInitialized()
    {
        // [新增] 設定頁面標題
        Layout?.SetPageTitle("智能助理 (AI Assistant)");
        // [新增] 訂閱服務的狀態變更事件，當服務狀態改變時，通知此元件重新渲染
        _aiAssistantService.OnChange += StateHasChanged;
    }

    // [新增] 實作 IDisposable 介面，在元件銷毀時取消訂閱，以避免記憶體洩漏
    public void Dispose()
    {
        _aiAssistantService.OnChange -= StateHasChanged;
    }
}